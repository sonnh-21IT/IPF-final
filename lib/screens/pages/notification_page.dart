import 'dart:math';

import 'package:config/base/base_screen.dart';
import 'package:config/screens/home_chat_ai.dart';
import 'package:config/utils/themes/app_colors.dart';
import 'package:flutter/material.dart';

import '../home_chat.dart';

class NotificationPage extends StatefulWidget {
  const NotificationPage({super.key});

  @override
  _NotificationPageState createState() => _NotificationPageState();
}

class _NotificationPageState extends State<NotificationPage> {
  bool showNotification = true;
  bool showMessages = false;

  @override
  Widget build(BuildContext context) {
    return BaseScreen(
      body: Column(
        children: [
          const SizedBox(height: 12),
          // Ph·∫ßn n√∫t
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
            children: [
              ElevatedButton(
                onPressed: () {
                  setState(() {
                    showMessages = true;
                    showNotification = false;
                  });
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: showMessages
                      ? AppColors.primaryColor
                      : const Color.fromRGBO(129, 199, 132, 20),
                  minimumSize: const Size(150, 44),
                ),
                child: const Row(
                  children: [
                    Icon(Icons.messenger_outline_outlined, color: Colors.white),
                    SizedBox(width: 8),
                    Text('Tin nh·∫Øn', style: TextStyle(color: Colors.white)),
                  ],
                ),
              ),
              ElevatedButton(
                onPressed: () {
                  setState(() {
                    showNotification = true;
                    showMessages = false;
                  });
                },
                style: ElevatedButton.styleFrom(
                  backgroundColor: showNotification
                      ? AppColors.primaryColor
                      : const Color.fromRGBO(129, 199, 132, 20),
                  minimumSize: const Size(150, 44),
                ),
                child: const Row(
                  children: [
                    Icon(Icons.notifications_outlined, color: Colors.white),
                    SizedBox(width: 8),
                    Text('Th√¥ng b√°o', style: TextStyle(color: Colors.white)),
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(height: 12),
          // Ph·∫ßn n·ªôi dung
          Expanded(
            child: showNotification
                ? const AiMessPage()
                : const NotificationListPage(),
          ),
        ],
      ),
    );
  }
}

class AiMessPage extends StatelessWidget {
  const AiMessPage({super.key});

  @override
  Widget build(BuildContext context) {
    // Danh s√°ch c√°c ƒëo·∫°n vƒÉn b·∫£n
    final List<String> messages = [
      'üôãCh√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi IPF',
      'üôå H√£y tham gia ngay c√°c ho·∫°t ƒë·ªông h·∫•p d·∫´n c·ªßa ch√∫ng t√¥i.',
      '‚úåÔ∏è Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n th√†nh c√¥ng!',
      'üé∂ H√£y c√πng nhau t·∫°o n√™n nh·ªØng k·ª∑ ni·ªám ƒë√°ng nh·ªõ.'
    ];
    final List<String> messages_nav = [
      ' D·ªãch thu·∫≠t ch√≠nh x√°c v√† chuy√™n nghi·ªáp ch∆∞a bao gi·ªù d·ªÖ d√†ng ƒë·∫øn th·∫ø. H√£y b·∫Øt ƒë·∫ßu t√¨m ki·∫øm ngay b√¢y gi·ªù.‚ù§Ô∏è',
      'T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng. B·∫Øt ƒë·∫ßu t√¨m ki·∫øm phi√™n d·ªãch vi√™n ph√π h·ª£p ngay th√¥i! Ô∏èüéâ',
      'Vi·ªác t√¨m ki·∫øm phi√™n d·ªãch vi√™n ch∆∞a bao gi·ªù d·ªÖ d√†ng ƒë·∫øn th·∫ø! T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t.üíï',
      'B·∫°n c√≥ m·ªôt th√¥ng b√°o m·ªõi t·ª´ IPF .üòç'
    ];

    // L·∫•y ƒëo·∫°n vƒÉn b·∫£n ng·∫´u nhi√™n
    final String randomMessage = messages[Random().nextInt(messages.length)];

    final String randomMessage_nav =
        messages_nav[Random().nextInt(messages_nav.length)];

    // L·∫•y ng√†y hi·ªán t·∫°i
    final String currentDate =
        DateTime.now().toLocal().toString().split(' ')[0];

    return Expanded(
      child: ListView.builder(
        itemCount: 4,
        itemBuilder: (context, index) {
          return Card(
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(8),
              side:
                  const BorderSide(color: Colors.green), // Th√™m border m√†u xanh
            ),
            elevation: 2,
            margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
            child: Padding(
              padding: const EdgeInsets.all(10),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    randomMessage,
                    style: const TextStyle(fontWeight: FontWeight.bold),
                  ),
                  Text(
                    randomMessage_nav,
                    style: TextStyle(color: Colors.grey),
                  ), // N·ªôi dung ph·ª•
                  Container(
                    margin: const EdgeInsets.symmetric(vertical: 8),
                  ),
                  const SizedBox(height: 8),
                  Text('Ng√†y: $currentDate'),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}

class NotificationListPage extends StatelessWidget {
  const NotificationListPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Align(
      alignment: Alignment.center,
      child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [
        Image.asset('assets/images/app_img/AI_1.png'),
        // SizeBox
        const SizedBox(
          height: 45,
        ),
        const Padding(
          padding: EdgeInsets.symmetric(
              horizontal: 50.0), // T·∫°o kho·∫£ng c√°ch 20 ƒë∆°n v·ªã v·ªÅ 2 b√™n
          child: Text(
            'Xin ch√†o R·∫•t vui ƒë∆∞·ª£c g·∫∑p b·∫°n ·ªü ƒë√¢y! B·∫±ng c√°ch nh·∫•n n√∫t "B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán", b·∫°n ƒë·ªìng √Ω x·ª≠ l√Ω d·ªØ li·ªáu c√° nh√¢n c·ªßa m√¨nh nh∆∞ ƒë∆∞·ª£c m√¥ t·∫£ trong Ch√≠nh s√°ch quy·ªÅn ri√™ng t∆∞ c·ªßa ch√∫ng t√¥i',
            textAlign: TextAlign.center,
            style: TextStyle(
              fontSize: 18,
              color: Color.fromRGBO(102, 112, 133, 20),
              fontWeight: FontWeight.normal,
            ),
          ),
        ),
        const SizedBox(
          height: 45,
        ),
        Container(
          child: Column(
            children: [
              SizedBox(
                width: 200,
                child: ElevatedButton(
                  onPressed: () {
                    print('Button ƒë√£ ƒë∆∞·ª£c nh·∫•n!');
                    Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (BuildContext context) =>
                                const HomeChatAI()));
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: const Color.fromRGBO(35, 125, 49, 20),
                    maximumSize: const Size(340, 70),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: const Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        'B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                          fontSize: 18,
                          color: Colors.white, // M√†u ch·ªØ
                          fontWeight: FontWeight.normal,
                        ),
                      ),
                      SizedBox(height: 0),
                    ],
                  ),
                ),
              ),
              const SizedBox(height: 10),
              SizedBox(
                width: 200,
                child: ElevatedButton(
                  onPressed: () {
                    print('Button ƒë√£ ƒë∆∞·ª£c nh·∫•n!');
                    Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (BuildContext context) => HomeChat()));
                  },
                  style: ElevatedButton.styleFrom(
                    backgroundColor: AppColors.surfaceColor,
                    maximumSize: const Size(340, 70),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                  ),
                  child: const Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        'Tin nh·∫Øn c·ªßa t√¥i',
                        textAlign: TextAlign.center,
                        style: TextStyle(
                          fontSize: 18,
                          color: Colors.black, // M√†u ch·ªØ
                          fontWeight: FontWeight.normal,
                        ),
                      ),
                      SizedBox(height: 0),
                    ],
                  ),
                ),
              )
            ],
          ),
        )
      ]),
    );
  }
}
